#include <stdio.h>
#include <stdlib.h>

void readInput(int* n,int* m,int** S,int** C)
{
// Loads all input and allocates space
int i;

scanf("%d",n);
scanf("%d",m);

*S=(int*) malloc((*n+1)*sizeof(int));
*C=(int*) malloc((*m+1)*sizeof(int));
if (!(*S) || !(*C))
{
  printf("malloc failed %d\n",__LINE__);
  exit(0);
}
(*S)[0]=0;                // Sentinel zero
for (i=1;i<=*n;i++)
  scanf("%d",*S+i);
}
void subsetSum(int n,int m,int* S,int* C)
{
int i,j,potentialSum,leftover,count = 0;

C[0]=0;
for (potentialSum=1; potentialSum<=m; potentialSum ++)
{   
  for (j=1;j<=n;j++)
  {
      count++;
    leftover=potentialSum-S[j];

    if (leftover>=0 && C[leftover]<j){

        break;
    }
  }
  C[potentialSum]=j;
}
    printf("count = %d\n", count);
}

void writeOutput(int n,int m,int* S,int* C)
{  
    int i;
    printf("m is %d\n", m);
    printf("  i   S\n");
    printf("-------\n");
    
    for (i=0;i<=n;i++){
        
        printf("%3d %3d\n",i,S[i]);
    }
    
    if (m<=50){
    
        printf("  i   C\n");
        printf("-------\n");
    
        for (i=0;i<=m;i++){
        
            printf("%3d %3d\n",i,C[i]);
        }
    }

    if (C[m]==n+1){
        
        printf("No solution\n");
    }
    
    else{   
        printf("(Not working) Solution with %d elements\n", m);
        printf("  i   S\n");
        printf("-------\n");
        for (i=m;i>0;i-=S[C[i]]){
        
            printf("%3d %3d\n",C[i],S[C[i]]);
        }
    }
}
int main()
{
    int n;
    int m;
    int *S;
    int *C;
    readInput(&n,&m,&S,&C);  
    subsetSum(n,m,S,C);
    writeOutput(n,m,S,C);
    free(S);
    free(C);
}
